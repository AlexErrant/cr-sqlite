name: Publish

on:
  push:
    tags:
      - "v.*"
      - "prebuild-test.*"

jobs:
  prebuild:
    name: Prebuild for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: crsqlite.so
            asset_name: crsqlite-linux-x86_64.so
          - os: windows-latest
            artifact_name: crsqlite.dll
            asset_name: crsqlite-windows-x86_64.dll
          - os: macos-latest
            artifact_name: crsqlite.dylib
            asset_name: crsqlite-macos-x86_64.dylib

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Rust Nightly
        run: |
          rustup default nightly
          rustup update

      - name: Windows rust toolchain
        if: runner.os == 'Windows'
        run: |
          rustup component add rust-src --toolchain nightly-x86_64-pc-windows-gnu
          rustup default nightly-x86_64-pc-windows-gnu

      - name: Build
        run: |
          cd core
          make loadable

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: core/dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

  prebuild-macos-arm:
    name: Prebuild for macos arm
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: crsqlite.dylib
            asset_name: crsqlite-macos-aarch64.dylib

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Rust Nightly
        run: |
          rustup default nightly-aarch64-apple-darwin
          rustup update

      - name: Build
        run: |
          cd core
          export CI_MAYBE_ARCH="-march=aarch64" && make loadable

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: core/dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
